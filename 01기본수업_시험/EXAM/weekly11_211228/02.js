// N개의 자연수로 이루어진 수열이 주어지면 이 수열에 존재하는 부분수열 중에서 원소의 총합이 홀수인 부분수열의 개수를 구하는 프로그램을 작성하세요.
// 만약 주어진 수열이 [1, 3, 5] 라면 이 수열의 부분수열들은
// [[1],[1, 3],[1, 3, 5],[3],[3, 5],[5]] 이고 각 부분수열의 원소총합은 [1, 4, 9, 3, 8, 5]이다. 여기서 부분수열의 합이 홀수인 것은 [1, 9, 3, 5]로 답은 4입니다.

// ▣ 입력설명
// 매개변수 nums에 N개의 원소를 갖는 수열이 주어집니다.(1<=N<=100,000), 수열의 원소는 100를 넘지 않는 자연수이다.

// ▣ 출력설명
// 부분수열의 합이 홀수인 부분수열의 개수를 반환합니다. 합이 홀수인 경우가 없다면 0을 반환합니다.

// ▣ 매개변수 형식 1
// [1, 3, 5]

// ▣ 반환값 형식 1
// 4

function solution(nums) {
  var answer = 0;
  const ch = Array(nums.length).fill(0);

  function DFS(L, s, sum) {
    if (L === nums.length) {
      if (sum % 2 !== 0) answer += 1;
    } else {
      for (let i = s; i < nums.length; i++) {
        if (ch[i] === 0) {
          ch[i] = 1;
          DFS(L + 1, i + 1, sum + nums[i]);
          ch[i] = 0;
          DFS(L + 1, i + 1, sum);
        }
      }
    }
  }
  DFS(0, 0, 0);
  return answer;
}

console.log(solution([1, 3, 5])); // 4
