// 7. 최소매출 => 효율성!
// 현수의 아빠는 제과점을 운영합니다. 현수아빠는 현수에게 N일 동안의 매출기록을 주고 연속 된 K일 동안의 최소 매출액을 차례로 구하라고 했습니다.
// 만약 N=10이고 10일 간의 매출기록이 아래와 같습니다. 이때 K=3이면
//11 12 15 20 25 10 20 13 15 19
// 연속된 3일간의 매출액을 차례로 구해보면 [11, 12, 15] 중에서 11, [12, 15, 20] 중에서 12, [15, 20, 25] 중에서 15와 같이 계속 구하면 결과는 [11, 12, 15, 10, 10, 10, 13, 13]입니 다.
// 여러분이 현수를 도와주세요.

// ▣ 입력설명
// 매개변수 nums에 N(5<=N<=100,000)일 동안의 매출액이 주어집니다. 매개변수 k에 K(2<=K<=N)가 주어집니다. 매출액의 500이하의 자연수입니다.
// ▣ 출력설명
// 최대 매출액을 반환합니다.
// ▣ 매개변수 형식 1
// [11, 12, 15, 20, 25, 10, 20, 13, 15, 19], 3
// ▣ 반환값 형식 1
// [11, 12, 15, 10, 10, 10, 13, 13]

function solution(nums, k) {
  const answer = [];
  const minQ = [];
  for (let i = 0; i < k; i++) {
    while (minQ.length > 0 && minQ[minQ.length - 1][0] > nums[i]) minQ.pop();
    minQ.push([nums[i], i]);
  }
  console.log(minQ);
  for (let i = k - 1; i < nums.length; i++) {
    while (minQ.length > 0 && minQ[minQ.length - 1][0] > nums[i]) minQ.pop();
    minQ.push([nums[i], i]);
    answer.push(minQ[0][0]);
    if (minQ[0][1] === i - k + 1) minQ.shift();
  }
  return answer;
}
console.log(solution([11, 12, 15, 20, 25, 10, 20, 13, 15, 19], 3)); // [11, 12, 15, 10, 10, 10, 13, 13]
