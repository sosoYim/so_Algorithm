function solution(n, m) {
  let answer = [],
    tmp = [];
  function DFS(L) {
    if (L === m) {
      answer.push(tmp.slice()); //deep copy
    } else {
      for (let i = 1; i <= n; i++) {
        tmp.push(i);
        DFS(L + 1);
        tmp.pop();
      }
    }
  }
  DFS(0);
  return answer;
}

console.log(solution(3, 2));

//중복 순열 매우 중요!!
//매개변수에 따라 변화되는 깊이의 다중 for문을 유연하게 대처하기 위해
//재귀함수를 이용한다.
//순열 : 중복순열에 check만 걸면 된다.
/*
중복순열 구하기
1부터 N까지 번호가 적힌 구슬이 있습니다. 이 중 중복을 허락하여 M번을 뽑아 일렬로 나열
하는 방법을 모두 출력합니다.
▣ 입력설명
매개변수 n에 자연수 N(3<=N<=10)이 주어지고, 매개변수 m에 M(2<=M<=N) 이 주어집니다.
▣ 출력설명
중복순열의 경우를 배열 형태로 반환합니다. 각 경우의 순서는 오름차순입니다.
▣ 매개변수 형식 1 
3 2
▣ 반환값 형식 1
[[1, 1], [1, 2], [1, 3], [2, 1], [2, 2], [2, 3], [3, 1], [3, 2], [3, 3]]
*/
