//한번 다녀간 섬은 0으로 바꿔준다.
//1을 만나면 DFS 호출.
//DFS 호출을 몇 번 하는가
//Blood Fill 알고리즘 (한 포인트에서 퍼져나가며 탐색하는 것)
//대표적인 문제 : 단지 번호 붙이기, 유기농 배추...

function solution(board) {
  let answer = 0;
  return answer;
}

const board = [
  [1, 1, 0, 0, 0, 1, 0],
  [0, 1, 1, 0, 1, 1, 0],
  [0, 1, 0, 0, 0, 0, 0],
  [0, 0, 0, 1, 0, 1, 1],
  [1, 1, 0, 1, 1, 0, 0],
  [1, 0, 0, 0, 1, 0, 0],
  [1, 0, 1, 0, 1, 0, 0],
];
console.log(solution(board)); //5

/*
  섬나라 아일랜드(DFS)
  N*N의 섬나라 아일랜드의 지도가 격자판의 정보로 주어집니다. 각 섬은 1로 표시되어 상하좌
  우와 대각선으로 연결되어 있으며, 0은 바다입니다. 섬나라 아일랜드에 몇 개의 섬이 있는지 
  구하는 프로그램을 작성하세요.
  1 1 0 0 0 1 0
  0 1 1 0 1 1 0
  0 1 0 0 0 0 0
  0 0 0 1 0 1 1
  1 1 0 1 1 0 0
  1 0 0 0 1 0 0
  1 0 1 0 1 0 0
  만약 위와 같다면 
  ▣ 입력설명
  매개변수 board에 N*N(3<=N<=20)의 격자판 정보가 주어집니다.
  ▣ 출력설명
  섬의 개수를 반환합니다.
  ▣ 매개변수 형식 1 
  [[1, 1, 0, 0, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1], 
  [1, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0]]
  ▣ 반환값 형식 1
  5
  */
